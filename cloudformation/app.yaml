AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda Web Adapter app behind API Gateway HTTP API

Parameters:
  ProjectName:
    Type: String
    Default: try-aws-lambda-web-adapter
  ImageUri:
    Type: String
    Description: ECR image URI with digest (e.g. 123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/repo@sha256:...)
    Default: public.ecr.aws/lambda/python:3.12-slim

Resources:
  EcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ProjectName
      ImageTagMutability: MUTABLE
      ImageScanningConfiguration:
        ScanOnPush: true

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${ProjectName}"
      RetentionInDays: 30

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-lambda-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  Function:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref ProjectName
      Role: !GetAtt LambdaRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Ref ImageUri
      Timeout: 30

  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Ref ProjectName
      ProtocolType: HTTP

  HttpApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      StageName: $default
      AutoDeploy: true

  Integration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt Function.Arn
      PayloadFormatVersion: '2.0'

  Route:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: $default
      Target: !Sub 'integrations/${Integration}'

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref Function
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*/*'

Outputs:
  ApiEndpoint:
    Description: HTTP API endpoint
    Value: !GetAtt HttpApi.ApiEndpoint
  EcrRepositoryUrl:
    Description: ECR repository URL
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ProjectName}"
